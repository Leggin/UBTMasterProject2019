{"ast":null,"code":"import _classCallCheck from \"/home/nicolas/Dokumente/Github/UBTMasterProject2019/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolas/Dokumente/Github/UBTMasterProject2019/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolas/Dokumente/Github/UBTMasterProject2019/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolas/Dokumente/Github/UBTMasterProject2019/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolas/Dokumente/Github/UBTMasterProject2019/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nicolas/Dokumente/Github/UBTMasterProject2019/client/src/CreateGlobalPayloadComponent.js\";\nimport React from \"react\";\nimport * as c from './Constants.js';\nimport \"./CreateGlobalPayloadComponent.css\";\nimport { Dropdown, Input, Popup } from 'semantic-ui-react';\n\nvar CreateGlobalPayloadComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateGlobalPayloadComponent, _React$Component);\n\n  function CreateGlobalPayloadComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CreateGlobalPayloadComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateGlobalPayloadComponent).call(this, props));\n    _this.state = {\n      payloadValue: \"\",\n      decisionType: \"\",\n      newId: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CreateGlobalPayloadComponent, [{\n    key: \"createPayload\",\n    value: function createPayload() {\n      var drizzle = this.props.drizzle;\n      var contract = drizzle.contracts.ContractCollaborationManager;\n      var value = this.state.payloadValue;\n\n      if (value !== \"\") {\n        switch (this.state.decisionType) {\n          case 0:\n            this.createStringPayload(contract, String(value));\n            break;\n\n          case 1:\n            if (!isNaN(value)) {\n              this.createIntPayload(contract, Number(value));\n            } else {\n              console.error(\"Input is not numerical\");\n            }\n\n            break;\n\n          default:\n        }\n      }\n    }\n  }, {\n    key: \"createStringPayload\",\n    value: function createStringPayload(contract, value) {\n      var _this2 = this;\n\n      contract.methods.createGlobalStringPayload.cacheSend(value, {\n        from: this.props.defaultAccount,\n        gas: 600000\n      });\n      contract.methods.getGlobalStringPayloadCount().call().then(function (count) {\n        _this2.setState({\n          newId: count\n        });\n\n        _this2.resetInput();\n      });\n    }\n  }, {\n    key: \"createIntPayload\",\n    value: function createIntPayload(contract, value) {\n      var _this3 = this;\n\n      contract.methods.createGlobalIntPayload.cacheSend(value, {\n        from: this.props.defaultAccount,\n        gas: 600000\n      });\n      contract.methods.getGlobalIntegerPayloadCount().call().then(function (count) {\n        _this3.setState({\n          newId: count\n        });\n\n        _this3.resetInput();\n      });\n    }\n  }, {\n    key: \"resetInput\",\n    value: function resetInput() {\n      this.setState({\n        payloadValue: \"\",\n        decisionType: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        className: \"payload-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"payload-type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        placeholder: \"Select Type\",\n        fluid: true,\n        selection: true,\n        onChange: function onChange(event, data) {\n          _this4.setState({\n            decisionType: data.value\n          });\n        },\n        options: c.DECISIONOPTIONS,\n        value: this.state.decisionType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"payload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Input, {\n        icon: \"money bill alternate outline\",\n        placeholder: \"Payload Value\",\n        onChange: function onChange(event, data) {\n          _this4.setState({\n            payloadValue: data.value\n          });\n        },\n        value: this.state.payloadValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"payload-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        trigger: React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.createPayload.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Create Payload\"),\n        content: React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"ID:\", this.state.newId),\n        on: \"click\",\n        position: \"right center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CreateGlobalPayloadComponent;\n}(React.Component);\n\nexport default CreateGlobalPayloadComponent;","map":{"version":3,"sources":["/home/nicolas/Dokumente/Github/UBTMasterProject2019/client/src/CreateGlobalPayloadComponent.js"],"names":["React","c","Dropdown","Input","Popup","CreateGlobalPayloadComponent","props","state","payloadValue","decisionType","newId","drizzle","contract","contracts","ContractCollaborationManager","value","createStringPayload","String","isNaN","createIntPayload","Number","console","error","methods","createGlobalStringPayload","cacheSend","from","defaultAccount","gas","getGlobalStringPayloadCount","call","then","count","setState","resetInput","createGlobalIntPayload","getGlobalIntegerPayloadCount","event","data","DECISIONOPTIONS","createPayload","bind","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as c from './Constants.js'\nimport \"./CreateGlobalPayloadComponent.css\"\nimport { Dropdown, Input, Popup } from 'semantic-ui-react'\n\nclass CreateGlobalPayloadComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            payloadValue: \"\",\n            decisionType: \"\",\n            newId: \"\",\n        }\n    }\n\n    createPayload() {\n        const { drizzle } = this.props;\n        const contract = drizzle.contracts.ContractCollaborationManager;\n        let value = this.state.payloadValue;\n\n        if (value !== \"\") {\n            switch (this.state.decisionType) {\n                case 0:\n                    this.createStringPayload(contract, String(value));\n                    break;\n                case 1:\n\n                    if (!isNaN(value)) {\n                        this.createIntPayload(contract, Number(value));\n                    }\n                    else {\n                        console.error(\"Input is not numerical\");\n                    }\n                    break;\n                default:\n            }\n        }\n    }\n\n    createStringPayload(contract, value) {\n        contract.methods.createGlobalStringPayload.cacheSend(value, {\n            from: this.props.defaultAccount,\n            gas: 600000\n        });\n        contract.methods.getGlobalStringPayloadCount().call().then((count) => {\n            this.setState({ newId: count });\n            this.resetInput();\n        });\n    }\n\n    createIntPayload(contract, value) {\n        contract.methods.createGlobalIntPayload.cacheSend(value, {\n            from: this.props.defaultAccount,\n            gas: 600000\n        });\n\n        contract.methods.getGlobalIntegerPayloadCount().call().then((count) => {\n            this.setState({ newId: count });\n            this.resetInput();\n        });\n    }\n\n    resetInput() {\n        this.setState({ payloadValue: \"\", decisionType: \"\" });\n    }\n\n    render() {\n        return (\n            <div className=\"payload-container\">\n                <div className=\"payload-type\">\n                    <Dropdown\n                        placeholder='Select Type'\n                        fluid selection\n                        onChange={\n                            (event, data) => {\n                                this.setState({ decisionType: data.value });\n                            }}\n                        options={c.DECISIONOPTIONS} value={this.state.decisionType} />\n                </div>\n                <div className=\"payload\">\n                    <Input\n                        icon='money bill alternate outline'\n                        placeholder='Payload Value'\n                        onChange={\n                            (event, data) => {\n                                this.setState({ payloadValue: data.value });\n                            }}\n                        value={this.state.payloadValue} />\n                </div>\n\n                <div className=\"payload-button\">\n                    <Popup\n                        trigger={<button type=\"button\"\n                            onClick={this.createPayload.bind(this)}>Create Payload</button>}\n                        content={<p>ID:{this.state.newId}</p>}\n                        on='click'\n                        position='right center'\n                    />\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default CreateGlobalPayloadComponent;"]},"metadata":{},"sourceType":"module"}