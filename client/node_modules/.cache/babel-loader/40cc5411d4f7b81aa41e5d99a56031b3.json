{"ast":null,"code":"import _classCallCheck from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Tasks =\n/*#__PURE__*/\nfunction () {\n  function Tasks(drizzleState, getTasksDataKey, getTaskByIdDataKeys) {\n    _classCallCheck(this, Tasks);\n\n    this.drizzleState = drizzleState;\n    this.getTasksDataKey = contract.methods.getTasks.cacheCall();\n    this.getTaskCountKey = contract.methods.getTaskCount.cacheCall();\n    this.getTaskByIdDataKeys = [];\n\n    for (var i = 0; i <= taskCount; i++) {\n      getTaskByIdDataKeys.push(contract.methods.getTaskById.cacheCall(i));\n    }\n  }\n\n  _createClass(Tasks, null, [{\n    key: \"getTaskIds\",\n    value: function getTaskIds() {\n      var ccmState = this.drizzleState.contracts.ContractCollaborationManager;\n      var tasksObject = ccmState.getTasks[this.getTasksDataKey];\n\n      if (tasksObject) {\n        return tasksObject.value;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getAllTasks\",\n    value: function getAllTasks() {\n      var tasks = [];\n      var ccmState = this.drizzleState.contracts.ContractCollaborationManager;\n      var taskIds = this.getTaskIds(this.drizzleState, this.getTasksDataKey);\n\n      if (taskIds) {\n        for (var index = 0; index < taskIds.length; index++) {\n          var tasksObject = ccmState.getTaskById[this.getTaskByIdDataKeys[index]];\n\n          if (tasksObject) {\n            tasks.push({\n              description: tasksObject.value.description,\n              tasktype: tasksObject.value.tasktype,\n              stateowner: tasksObject.value.stateowner,\n              requirements: tasksObject.value.requirements,\n              status: tasksObject.value.status,\n              id: index\n            });\n          }\n        }\n      }\n\n      return tasks;\n    }\n  }]);\n\n  return Tasks;\n}();\n\nexport default Tasks;","map":{"version":3,"sources":["/home/nicolas/Dokumente/Github/drizzle_react/client/src/Tasks.js"],"names":["Tasks","drizzleState","getTasksDataKey","getTaskByIdDataKeys","contract","methods","getTasks","cacheCall","getTaskCountKey","getTaskCount","i","taskCount","push","getTaskById","ccmState","contracts","ContractCollaborationManager","tasksObject","value","tasks","taskIds","getTaskIds","index","length","description","tasktype","stateowner","requirements","status","id"],"mappings":";;;IAAMA,K;;;AACF,iBAAYC,YAAZ,EAA0BC,eAA1B,EAA2CC,mBAA3C,EAAgE;AAAA;;AAC5D,SAAKF,YAAL,GAAoBA,YAApB;AACA,SAAKC,eAAL,GAAuBE,QAAQ,CAACC,OAAT,CAAiBC,QAAjB,CAA0BC,SAA1B,EAAvB;AACA,SAAKC,eAAL,GAAuBJ,QAAQ,CAACC,OAAT,CAAiBI,YAAjB,CAA8BF,SAA9B,EAAvB;AAEA,SAAKJ,mBAAL,GAA2B,EAA3B;;AAEA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,SAArB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCP,MAAAA,mBAAmB,CAACS,IAApB,CAAyBR,QAAQ,CAACC,OAAT,CAAiBQ,WAAjB,CAA6BN,SAA7B,CAAuCG,CAAvC,CAAzB;AACH;AACJ;;;;iCACmB;AAChB,UAAMI,QAAQ,GAAG,KAAKb,YAAL,CAAkBc,SAAlB,CAA4BC,4BAA7C;AACA,UAAMC,WAAW,GAAGH,QAAQ,CAACR,QAAT,CAAkB,KAAKJ,eAAvB,CAApB;;AAEA,UAAIe,WAAJ,EAAiB;AACb,eAAOA,WAAW,CAACC,KAAnB;AACH;;AACD,aAAO,EAAP;AACH;;;kCAEoB;AACjB,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAML,QAAQ,GAAG,KAAKb,YAAL,CAAkBc,SAAlB,CAA4BC,4BAA7C;AACA,UAAMI,OAAO,GAAG,KAAKC,UAAL,CAAgB,KAAKpB,YAArB,EAAmC,KAAKC,eAAxC,CAAhB;;AAEA,UAAIkB,OAAJ,EAAa;AACT,aAAK,IAAIE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,OAAO,CAACG,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACjD,cAAML,WAAW,GAAGH,QAAQ,CAACD,WAAT,CAAqB,KAAKV,mBAAL,CAAyBmB,KAAzB,CAArB,CAApB;;AACA,cAAIL,WAAJ,EAAiB;AACbE,YAAAA,KAAK,CAACP,IAAN,CAAW;AACPY,cAAAA,WAAW,EAAEP,WAAW,CAACC,KAAZ,CAAkBM,WADxB;AAEPC,cAAAA,QAAQ,EAAER,WAAW,CAACC,KAAZ,CAAkBO,QAFrB;AAGPC,cAAAA,UAAU,EAAET,WAAW,CAACC,KAAZ,CAAkBQ,UAHvB;AAIPC,cAAAA,YAAY,EAAEV,WAAW,CAACC,KAAZ,CAAkBS,YAJzB;AAKPC,cAAAA,MAAM,EAAEX,WAAW,CAACC,KAAZ,CAAkBU,MALnB;AAMPC,cAAAA,EAAE,EAAEP;AANG,aAAX;AAQH;AACJ;AACJ;;AACD,aAAOH,KAAP;AACH;;;;;;AAEL,eAAenB,KAAf","sourcesContent":["class Tasks {\n    constructor(drizzleState, getTasksDataKey, getTaskByIdDataKeys) {\n        this.drizzleState = drizzleState;\n        this.getTasksDataKey = contract.methods.getTasks.cacheCall();\n        this.getTaskCountKey = contract.methods.getTaskCount.cacheCall();\n\n        this.getTaskByIdDataKeys = [];\n\n        for (let i = 0; i <= taskCount; i++) {\n            getTaskByIdDataKeys.push(contract.methods.getTaskById.cacheCall(i));\n        }\n    }\n    static getTaskIds() {\n        const ccmState = this.drizzleState.contracts.ContractCollaborationManager;\n        const tasksObject = ccmState.getTasks[this.getTasksDataKey];\n\n        if (tasksObject) {\n            return tasksObject.value;\n        }\n        return [];\n    }\n\n    static getAllTasks() {\n        let tasks = [];\n        const ccmState = this.drizzleState.contracts.ContractCollaborationManager;\n        const taskIds = this.getTaskIds(this.drizzleState, this.getTasksDataKey);\n\n        if (taskIds) {\n            for (let index = 0; index < taskIds.length; index++) {\n                const tasksObject = ccmState.getTaskById[this.getTaskByIdDataKeys[index]];\n                if (tasksObject) {\n                    tasks.push({\n                        description: tasksObject.value.description,\n                        tasktype: tasksObject.value.tasktype,\n                        stateowner: tasksObject.value.stateowner,\n                        requirements: tasksObject.value.requirements,\n                        status: tasksObject.value.status,\n                        id: index,\n                    });\n                }\n            }\n        }\n        return tasks;\n    }\n}\nexport default Tasks"]},"metadata":{},"sourceType":"module"}