{"ast":null,"code":"import _classCallCheck from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nicolas/Dokumente/Github/drizzle_react/client/src/AddDecisionComponent.js\";\nimport React from \"react\";\nimport * as c from './Constants.js';\nimport { Dropdown } from 'semantic-ui-react';\nimport Tasks from \"./Tasks\";\n\nvar AddDecisionComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddDecisionComponent, _React$Component);\n\n  function AddDecisionComponent(props) {\n    var _this;\n\n    _classCallCheck(this, AddDecisionComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddDecisionComponent).call(this, props));\n    _this.state = {\n      selectedTask: null\n    };\n    _this.decisionTypes = c.DECISIONTYPES;\n    _this.operator = c.OPERATORS;\n    _this.gatewayTypes = c.GATEWAYTPYES;\n    return _this;\n  }\n\n  _createClass(AddDecisionComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var contract = this.props.drizzle.contracts.ContractCollaborationManager;\n      var getTasksDataKey = contract.methods.getTasks.cacheCall();\n      var ids = [];\n\n      for (var i = 0; i < 150; i++) {\n        ids.push(i);\n      }\n\n      var getTaskByIdDataKeys = [];\n      ids.forEach(function (id) {\n        getTaskByIdDataKeys.push(contract.methods.getTaskById.cacheCall(id));\n      });\n      this.setState({\n        getTasksDataKey: getTasksDataKey,\n        getTaskByIdDataKeys: getTaskByIdDataKeys\n      });\n    }\n  }, {\n    key: \"getTaskDropdownOptions\",\n    value: function getTaskDropdownOptions() {\n      var tasks = Tasks.getAllTasks(this.props.drizzleState, this.state.getTaskByIdDataKeys, this.state.getTasksDataKey);\n      var options = [];\n      tasks.forEach(function (task) {\n        options.push({\n          key: task.id,\n          value: task.id,\n          text: task.description\n        });\n      });\n      return options;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        className: \"add-task-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"add-task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        placeholder: \"Select Task\",\n        onChange: function onChange(event, data) {\n          _this2.setState({\n            selectedTask: data.value\n          });\n        },\n        fluid: true,\n        selection: true,\n        options: taskOptions,\n        value: this.state.selectedTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"add-task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        placeholder: \"Select Global Payload\",\n        onChange: function onChange(event, data) {\n          _this2.setState({\n            taskType: data.value\n          });\n        },\n        fluid: true,\n        selection: true,\n        options: this.taskTypes,\n        value: this.state.taskType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"add-task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        placeholder: \"Requirements\",\n        onChange: function onChange(event, data) {\n          _this2.setState({\n            requirements: data.value\n          });\n        },\n        fluid: true,\n        multiple: true,\n        selection: true,\n        options: newOptions,\n        value: this.state.requirements,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleCreateTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Create Task\"));\n    }\n  }]);\n\n  return AddDecisionComponent;\n}(React.Component);\n\nexport default AddDecisionComponent;","map":{"version":3,"sources":["/home/nicolas/Dokumente/Github/drizzle_react/client/src/AddDecisionComponent.js"],"names":["React","c","Dropdown","Tasks","AddDecisionComponent","props","state","selectedTask","decisionTypes","DECISIONTYPES","operator","OPERATORS","gatewayTypes","GATEWAYTPYES","contract","drizzle","contracts","ContractCollaborationManager","getTasksDataKey","methods","getTasks","cacheCall","ids","i","push","getTaskByIdDataKeys","forEach","id","getTaskById","setState","tasks","getAllTasks","drizzleState","options","task","key","value","text","description","event","data","taskOptions","taskType","taskTypes","requirements","newOptions","handleCreateTask","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as c from './Constants.js'\nimport { Dropdown } from 'semantic-ui-react'\nimport Tasks from \"./Tasks\"\n\n\nclass AddDecisionComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTask: null,\n        }\n        this.decisionTypes = c.DECISIONTYPES;\n        this.operator = c.OPERATORS;\n        this.gatewayTypes = c.GATEWAYTPYES\n    }\n\n    componentDidMount() {\n        const contract = this.props.drizzle.contracts.ContractCollaborationManager;\n        const getTasksDataKey = contract.methods.getTasks.cacheCall();\n\n        let ids = [];\n        for (let i = 0; i < 150; i++) {\n            ids.push(i);\n        }\n\n        const getTaskByIdDataKeys = [];\n\n        ids.forEach(id => {\n            getTaskByIdDataKeys.push(contract.methods.getTaskById.cacheCall(id));\n        });\n        this.setState({ getTasksDataKey, getTaskByIdDataKeys });\n    }\n\n\n    getTaskDropdownOptions() {\n        let tasks = Tasks.getAllTasks(this.props.drizzleState, this.state.getTaskByIdDataKeys, this.state.getTasksDataKey);\n        let options = [];\n\n        tasks.forEach(task => {\n            options.push({ key: task.id, value: task.id, text: task.description });\n        });\n        return options;\n    }\n\n    render() {\n\n        return (\n            <form className=\"add-task-form\" >\n                <label className=\"add-task-label\">\n                    <Dropdown placeholder='Select Task' onChange={\n                        (event, data) => {\n                            this.setState({ selectedTask: data.value });\n                        }\n                    } fluid selection options={taskOptions} value={this.state.selectedTask} />\n                </label>\n\n                <label className=\"add-task-label\">\n                    <Dropdown placeholder='Select Global Payload' onChange={\n                        (event, data) => {\n                            this.setState({ taskType: data.value });\n                        }} fluid selection options={this.taskTypes} value={this.state.taskType} />\n                </label>\n                <label className=\"add-task-label\">\n                    <Dropdown placeholder='Requirements' onChange={\n                        (event, data) => {\n                            this.setState({ requirements: data.value });\n                        }\n                    }\n                        fluid multiple selection options={newOptions} value={this.state.requirements} />\n                </label>\n                <button type=\"button\" onClick={this.handleCreateTask}>\n                    Create Task\n                 </button>\n            </form >\n        );\n    }\n}\n\n\n\nexport default AddDecisionComponent;"]},"metadata":{},"sourceType":"module"}