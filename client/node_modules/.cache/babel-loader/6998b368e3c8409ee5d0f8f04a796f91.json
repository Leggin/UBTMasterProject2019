{"ast":null,"code":"import _classCallCheck from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Tasks =\n/*#__PURE__*/\nfunction () {\n  function Tasks(drizzleState, drizzle) {\n    _classCallCheck(this, Tasks);\n\n    this.drizzleState = drizzleState;\n    this.contract = drizzle.contracts.ContractCollaborationManager;\n    this.ccmState = drizzleState.contracts.ContractCollaborationManager;\n    this.getTasksDataKey = this.contract.methods.getTasks.cacheCall();\n    this.getTaskCountKey = this.contract.methods.getTaskCount.cacheCall();\n    var taskCount = this.ccmState.getTaskCount[this.getTaskCountKey];\n    taskCount = taskCount ? Number(this.ccmState.getTaskCount[this.getTaskCountKey].value) : taskCount;\n    this.getTaskByIdDataKeys = [];\n\n    for (var i = 0; i <= taskCount; i++) {\n      this.getTaskByIdDataKeys.push(this.contract.methods.getTaskById.cacheCall(i));\n    }\n  }\n\n  _createClass(Tasks, [{\n    key: \"getTaskIds\",\n    value: function getTaskIds() {\n      var tasksObject = this.ccmState.getTasks[this.getTasksDataKey];\n\n      if (tasksObject) {\n        return tasksObject.value;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getAllTasks\",\n    value: function getAllTasks() {\n      taskCount = taskCount ? Number(this.ccmState.getTaskCount[this.getTaskCountKey].value) : taskCount;\n\n      for (var i = 0; i <= taskCount; i++) {\n        this.getTaskByIdDataKeys.push(this.contract.methods.getTaskById.cacheCall(i));\n      }\n\n      var tasks = [];\n      var taskIds = this.getTaskIds(this.drizzleState, this.getTasksDataKey);\n\n      if (taskIds) {\n        for (var index = 0; index < taskIds.length; index++) {\n          var tasksObject = this.ccmState.getTaskById[this.getTaskByIdDataKeys[index]];\n\n          if (tasksObject) {\n            tasks.push({\n              description: tasksObject.value.description,\n              tasktype: tasksObject.value.tasktype,\n              stateowner: tasksObject.value.stateowner,\n              requirements: tasksObject.value.requirements,\n              status: tasksObject.value.status,\n              id: index\n            });\n          }\n        }\n      }\n\n      return tasks;\n    }\n  }]);\n\n  return Tasks;\n}();\n\nexport default Tasks;","map":{"version":3,"sources":["/home/nicolas/Dokumente/Github/drizzle_react/client/src/Tasks.js"],"names":["Tasks","drizzleState","drizzle","contract","contracts","ContractCollaborationManager","ccmState","getTasksDataKey","methods","getTasks","cacheCall","getTaskCountKey","getTaskCount","taskCount","Number","value","getTaskByIdDataKeys","i","push","getTaskById","tasksObject","tasks","taskIds","getTaskIds","index","length","description","tasktype","stateowner","requirements","status","id"],"mappings":";;;IAAMA,K;;;AACF,iBAAYC,YAAZ,EAA0BC,OAA1B,EAAmC;AAAA;;AAC/B,SAAKD,YAAL,GAAoBA,YAApB;AACA,SAAKE,QAAL,GAAgBD,OAAO,CAACE,SAAR,CAAkBC,4BAAlC;AACA,SAAKC,QAAL,GAAgBL,YAAY,CAACG,SAAb,CAAuBC,4BAAvC;AAEA,SAAKE,eAAL,GAAuB,KAAKJ,QAAL,CAAcK,OAAd,CAAsBC,QAAtB,CAA+BC,SAA/B,EAAvB;AACA,SAAKC,eAAL,GAAuB,KAAKR,QAAL,CAAcK,OAAd,CAAsBI,YAAtB,CAAmCF,SAAnC,EAAvB;AAEA,QAAIG,SAAS,GAAG,KAAKP,QAAL,CAAcM,YAAd,CAA2B,KAAKD,eAAhC,CAAhB;AACAE,IAAAA,SAAS,GAAIA,SAAD,GAAcC,MAAM,CAAC,KAAKR,QAAL,CAAcM,YAAd,CAA2B,KAAKD,eAAhC,EAAiDI,KAAlD,CAApB,GAA+EF,SAA3F;AAEA,SAAKG,mBAAL,GAA2B,EAA3B;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,SAArB,EAAgCI,CAAC,EAAjC,EAAqC;AACjC,WAAKD,mBAAL,CAAyBE,IAAzB,CAA8B,KAAKf,QAAL,CAAcK,OAAd,CAAsBW,WAAtB,CAAkCT,SAAlC,CAA4CO,CAA5C,CAA9B;AACH;AACJ;;;;iCACY;AACT,UAAMG,WAAW,GAAG,KAAKd,QAAL,CAAcG,QAAd,CAAuB,KAAKF,eAA5B,CAApB;;AAEA,UAAIa,WAAJ,EAAiB;AACb,eAAOA,WAAW,CAACL,KAAnB;AACH;;AACD,aAAO,EAAP;AACH;;;kCAEa;AACVF,MAAAA,SAAS,GAAIA,SAAD,GAAcC,MAAM,CAAC,KAAKR,QAAL,CAAcM,YAAd,CAA2B,KAAKD,eAAhC,EAAiDI,KAAlD,CAApB,GAA+EF,SAA3F;;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,SAArB,EAAgCI,CAAC,EAAjC,EAAqC;AACjC,aAAKD,mBAAL,CAAyBE,IAAzB,CAA8B,KAAKf,QAAL,CAAcK,OAAd,CAAsBW,WAAtB,CAAkCT,SAAlC,CAA4CO,CAA5C,CAA9B;AACH;;AACD,UAAII,KAAK,GAAG,EAAZ;AACA,UAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgB,KAAKtB,YAArB,EAAmC,KAAKM,eAAxC,CAAhB;;AAEA,UAAIe,OAAJ,EAAa;AACT,aAAK,IAAIE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,OAAO,CAACG,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACjD,cAAMJ,WAAW,GAAG,KAAKd,QAAL,CAAca,WAAd,CAA0B,KAAKH,mBAAL,CAAyBQ,KAAzB,CAA1B,CAApB;;AACA,cAAIJ,WAAJ,EAAiB;AACbC,YAAAA,KAAK,CAACH,IAAN,CAAW;AACPQ,cAAAA,WAAW,EAAEN,WAAW,CAACL,KAAZ,CAAkBW,WADxB;AAEPC,cAAAA,QAAQ,EAAEP,WAAW,CAACL,KAAZ,CAAkBY,QAFrB;AAGPC,cAAAA,UAAU,EAAER,WAAW,CAACL,KAAZ,CAAkBa,UAHvB;AAIPC,cAAAA,YAAY,EAAET,WAAW,CAACL,KAAZ,CAAkBc,YAJzB;AAKPC,cAAAA,MAAM,EAAEV,WAAW,CAACL,KAAZ,CAAkBe,MALnB;AAMPC,cAAAA,EAAE,EAAEP;AANG,aAAX;AAQH;AACJ;AACJ;;AACD,aAAOH,KAAP;AACH;;;;;;AAEL,eAAerB,KAAf","sourcesContent":["class Tasks {\n    constructor(drizzleState, drizzle) {\n        this.drizzleState = drizzleState;\n        this.contract = drizzle.contracts.ContractCollaborationManager;\n        this.ccmState = drizzleState.contracts.ContractCollaborationManager;\n\n        this.getTasksDataKey = this.contract.methods.getTasks.cacheCall();\n        this.getTaskCountKey = this.contract.methods.getTaskCount.cacheCall();\n\n        let taskCount = this.ccmState.getTaskCount[this.getTaskCountKey];\n        taskCount = (taskCount) ? Number(this.ccmState.getTaskCount[this.getTaskCountKey].value) : taskCount;\n\n        this.getTaskByIdDataKeys = [];\n\n        for (let i = 0; i <= taskCount; i++) {\n            this.getTaskByIdDataKeys.push(this.contract.methods.getTaskById.cacheCall(i));\n        }\n    }\n    getTaskIds() {\n        const tasksObject = this.ccmState.getTasks[this.getTasksDataKey];\n\n        if (tasksObject) {\n            return tasksObject.value;\n        }\n        return [];\n    }\n\n    getAllTasks() {\n        taskCount = (taskCount) ? Number(this.ccmState.getTaskCount[this.getTaskCountKey].value) : taskCount;\n        for (let i = 0; i <= taskCount; i++) {\n            this.getTaskByIdDataKeys.push(this.contract.methods.getTaskById.cacheCall(i));\n        }\n        let tasks = [];\n        const taskIds = this.getTaskIds(this.drizzleState, this.getTasksDataKey);\n\n        if (taskIds) {\n            for (let index = 0; index < taskIds.length; index++) {\n                const tasksObject = this.ccmState.getTaskById[this.getTaskByIdDataKeys[index]];\n                if (tasksObject) {\n                    tasks.push({\n                        description: tasksObject.value.description,\n                        tasktype: tasksObject.value.tasktype,\n                        stateowner: tasksObject.value.stateowner,\n                        requirements: tasksObject.value.requirements,\n                        status: tasksObject.value.status,\n                        id: index,\n                    });\n                }\n            }\n        }\n        return tasks;\n    }\n}\nexport default Tasks"]},"metadata":{},"sourceType":"module"}