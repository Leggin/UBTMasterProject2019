{"ast":null,"code":"import _classCallCheck from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nicolas/Dokumente/Github/drizzle_react/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Supervisor from \"./Supervisor\";\nimport Collaborators from \"./Collaborators\";\nimport CreateTask from \"./CreateTask\";\nimport TaskTable from \"./TaskTable\";\nimport AccountSelectorComponent from './AccountSelectorComponent';\nimport { Header, Menu } from 'semantic-ui-react';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      drizzleState: null,\n      drizzle: null\n    };\n\n    _this.handleItemClick = function (e, _ref) {\n      var name = _ref.name;\n      return _this.setState({\n        activeItem: name\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var drizzle = this.props.drizzle; // subscribe to changes in the store\n\n      this.unsubscribe = drizzle.store.subscribe(function () {\n        // every time the store updates, grab the state from drizzle\n        var drizzleState = drizzle.store.getState(); // check to see if it's ready, if so, update local component state\n\n        if (drizzleState.drizzleStatus.initialized) {\n          _this2.setState({\n            loading: false,\n            drizzleState: drizzleState,\n            drizzle: drizzle\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var activeItem = this.state.activeItem;\n      return React.createElement(Menu, {\n        secondary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        name: \"show Tasks\",\n        active: activeItem === 'show Tasks',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"add Collaborator\",\n        active: activeItem === 'add Collaborator',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"add Task\",\n        active: activeItem === 'add Task',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) return \"Loading Drizzle...\";\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.renderMenu()), React.createElement(\"div\", {\n        className: \"acc-selector\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(AccountSelectorComponent, {\n        drizzle: this.state.drizzle,\n        drizzleState: this.state.drizzleState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(Supervisor, {\n        drizzle: this.state.drizzle,\n        drizzleState: this.state.drizzleState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Collaborators, {\n        drizzle: this.state.drizzle,\n        drizzleState: this.state.drizzleState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(CreateTask, {\n        drizzle: this.state.drizzle,\n        drizzleState: this.state.drizzleState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(TaskTable, {\n        drizzle: this.state.drizzle,\n        drizzleState: this.state.drizzleState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/nicolas/Dokumente/Github/drizzle_react/client/src/App.js"],"names":["React","Component","Supervisor","Collaborators","CreateTask","TaskTable","AccountSelectorComponent","Header","Menu","App","state","loading","drizzleState","drizzle","handleItemClick","e","name","setState","activeItem","props","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","renderMenu"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport Supervisor from \"./Supervisor\";\nimport Collaborators from \"./Collaborators\";\nimport CreateTask from \"./CreateTask\";\nimport TaskTable from \"./TaskTable\";\nimport AccountSelectorComponent from './AccountSelectorComponent';\nimport { Header, Menu } from 'semantic-ui-react'\n\n\nclass App extends Component {\n  state = { loading: true, drizzleState: null, drizzle: null };\n\n  componentDidMount() {\n    const { drizzle } = this.props;\n\n    // subscribe to changes in the store\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState();\n\n      // check to see if it's ready, if so, update local component state\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState, drizzle });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  renderMenu() {\n    const { activeItem } = this.state;\n    return (\n      <Menu secondary >\n        <Menu.Item name='show Tasks' active={activeItem === 'show Tasks'} onClick={this.handleItemClick} />\n        <Menu.Item\n          name='add Collaborator'\n          active={activeItem === 'add Collaborator'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='add Task'\n          active={activeItem === 'add Task'}\n          onClick={this.handleItemClick}\n        />\n      </Menu>\n    );\n  }\n\n  render() {\n    if (this.state.loading) return \"Loading Drizzle...\";\n    return (\n      <div className=\"App\">\n        <div className=\"Menu\">\n          {this.renderMenu()}\n        </div>\n        <div className=\"acc-selector\">\n          <AccountSelectorComponent\n            drizzle={this.state.drizzle}\n            drizzleState={this.state.drizzleState} />\n        </div>\n        <Supervisor\n          drizzle={this.state.drizzle}\n          drizzleState={this.state.drizzleState}\n        />\n        <Collaborators\n          drizzle={this.state.drizzle}\n          drizzleState={this.state.drizzleState}\n        />\n        <CreateTask\n          drizzle={this.state.drizzle}\n          drizzleState={this.state.drizzleState}\n        />\n        <TaskTable\n          drizzle={this.state.drizzle}\n          drizzleState={this.state.drizzleState}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}