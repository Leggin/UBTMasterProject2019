{"ast":null,"code":"import _classCallCheck from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nicolas/Dokumente/Github/drizzle_react/client/src/ActionComponent.js\";\nimport React from \"react\";\nimport { Dropdown, Input } from 'semantic-ui-react';\nimport Tasks from \"./Tasks\";\n\nvar ActionComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ActionComponent, _React$Component);\n\n  function ActionComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ActionComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActionComponent).call(this, props));\n    _this.state = {\n      selectedTask: null,\n      getTasksDataKey: \"\",\n      getTaskByIdDataKeys: \"\",\n      payValue: 0,\n      receiver: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ActionComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var contract = this.props.drizzle.contracts.ContractCollaborationManager;\n      var getTasksDataKey = contract.methods.getTasks.cacheCall();\n      var getTaskCountKey = contract.methods.getTaskCount.cacheCall();\n      var ccmState = this.props.drizzleState.contracts.ContractCollaborationManager;\n      var taskCount = ccmState.getTaskCount[getTaskCountKey];\n      taskCount = taskCount ? Number(taskCount.value) : 150;\n      var getTaskByIdDataKeys = [];\n\n      for (var i = 0; i <= taskCount; i++) {\n        getTaskByIdDataKeys.push(contract.methods.getTaskById.cacheCall(i));\n      }\n\n      this.setState({\n        getTasksDataKey: getTasksDataKey,\n        getTaskByIdDataKeys: getTaskByIdDataKeys\n      });\n    }\n  }, {\n    key: \"getAccountsDropdownObject\",\n    value: function getAccountsDropdownObject() {\n      var accountOject = [];\n      var drizzleAccounts = this.props.drizzleState.accounts;\n\n      for (var acc in drizzleAccounts) {\n        accountOject.push({\n          key: drizzleAccounts[acc],\n          text: acc + \":\\t\" + drizzleAccounts[acc],\n          value: drizzleAccounts[acc]\n        });\n      }\n\n      return accountOject;\n    }\n  }, {\n    key: \"getTaskDropdownOptions\",\n    value: function getTaskDropdownOptions() {\n      var tasks = Tasks.getAllTasks(this.props.drizzleState, this.state.getTaskByIdDataKeys, this.state.getTasksDataKey);\n      var options = [];\n      tasks.forEach(function (task) {\n        options.push({\n          key: task.id,\n          value: task.id,\n          text: \"Task: \".concat(task.id, \" | Description: \").concat(task.description)\n        });\n      });\n      return options;\n    }\n  }, {\n    key: \"clearInput\",\n    value: function clearInput() {\n      this.setState({\n        selectedTask: \"\",\n        receiver: \"\",\n        payValue: \"\"\n      });\n    }\n  }, {\n    key: \"addAction\",\n    value: function addAction() {\n      var contract = this.props.drizzle.contracts.ContractCollaborationManager;\n      contract.methods.addActionToTaskId.cacheSend(this.state.selectedTask, this.state.payValue, this.state.receiver, {\n        from: this.props.defaultAccount,\n        gas: 600000\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var tasksObject = this.getTaskDropdownOptions();\n      return React.createElement(\"form\", {\n        className: \"add-decision-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"select-task-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        placeholder: \"Select Task\",\n        onChange: function onChange(event, data) {\n          _this2.setState({\n            selectedTask: data.value\n          });\n        },\n        fluid: true,\n        selection: true,\n        options: tasksObject,\n        value: this.state.selectedTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(Input, {\n        className: \"action-value-input\",\n        placeholder: \"Ethereum\",\n        onChange: function onChange(event, data) {\n          _this2.setState({\n            payValue: data.value\n          });\n        },\n        value: this.state.payValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        placeholder: \"Select Receiver Account\",\n        onChange: function onChange(event, data) {\n          _this2.setState({\n            receiver: data.value\n          });\n        },\n        fluid: true,\n        selection: true,\n        options: this.getAccountsDropdownObject,\n        value: this.state.receiver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.addAction.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Add Action\")));\n    }\n  }]);\n\n  return ActionComponent;\n}(React.Component);\n\nexport default ActionComponent;","map":{"version":3,"sources":["/home/nicolas/Dokumente/Github/drizzle_react/client/src/ActionComponent.js"],"names":["React","Dropdown","Input","Tasks","ActionComponent","props","state","selectedTask","getTasksDataKey","getTaskByIdDataKeys","payValue","receiver","contract","drizzle","contracts","ContractCollaborationManager","methods","getTasks","cacheCall","getTaskCountKey","getTaskCount","ccmState","drizzleState","taskCount","Number","value","i","push","getTaskById","setState","accountOject","drizzleAccounts","accounts","acc","key","text","tasks","getAllTasks","options","forEach","task","id","description","addActionToTaskId","cacheSend","from","defaultAccount","gas","tasksObject","getTaskDropdownOptions","event","data","getAccountsDropdownObject","addAction","bind","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Dropdown, Input } from 'semantic-ui-react'\nimport Tasks from \"./Tasks\"\n\n\nclass ActionComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTask: null,\n            getTasksDataKey: \"\",\n            getTaskByIdDataKeys: \"\",\n            payValue: 0,\n            receiver: \"\"\n        }\n    }\n\n    componentDidMount() {\n        const contract = this.props.drizzle.contracts.ContractCollaborationManager;\n        const getTasksDataKey = contract.methods.getTasks.cacheCall();\n\n        const getTaskCountKey = contract.methods.getTaskCount.cacheCall();\n        const ccmState = this.props.drizzleState.contracts.ContractCollaborationManager;\n\n        let taskCount = ccmState.getTaskCount[getTaskCountKey];\n        taskCount = (taskCount) ? Number(taskCount.value) : 150;\n        const getTaskByIdDataKeys = [];\n\n        for (let i = 0; i <= taskCount; i++) {\n            getTaskByIdDataKeys.push(contract.methods.getTaskById.cacheCall(i));\n        }\n\n        this.setState({\n            getTasksDataKey,\n            getTaskByIdDataKeys,\n\n        });\n    }\n\n    getAccountsDropdownObject() {\n        let accountOject = [];\n        let drizzleAccounts = this.props.drizzleState.accounts;\n        for (let acc in drizzleAccounts) {\n            accountOject.push({ key: drizzleAccounts[acc], text: acc + \":\\t\" + drizzleAccounts[acc], value: drizzleAccounts[acc] })\n        }\n        return accountOject;\n    }\n\n    getTaskDropdownOptions() {\n        let tasks = Tasks.getAllTasks(this.props.drizzleState, this.state.getTaskByIdDataKeys, this.state.getTasksDataKey);\n        let options = [];\n\n        tasks.forEach(task => {\n            options.push({ key: task.id, value: task.id, text: `Task: ${task.id} | Description: ${task.description}` });\n        });\n        return options;\n    }\n\n    clearInput() {\n        this.setState({\n            selectedTask: \"\",\n            receiver: \"\",\n            payValue: \"\"\n        });\n    }\n\n    addAction() {\n        const contract = this.props.drizzle.contracts.ContractCollaborationManager;\n\n        contract.methods.addActionToTaskId.cacheSend(this.state.selectedTask, this.state.payValue, this.state.receiver, {\n            from: this.props.defaultAccount,\n            gas: 600000\n        });\n    }\n\n    render() {\n        let tasksObject = this.getTaskDropdownOptions();\n        return (\n            <form className=\"add-decision-form\" >\n\n                <label className=\"select-task-label\">\n                    <Dropdown placeholder='Select Task' onChange={\n                        (event, data) => {\n                            this.setState({ selectedTask: data.value });\n                        }\n                    } fluid selection options={tasksObject} value={this.state.selectedTask} />\n                </label>\n\n                <Input className=\"action-value-input\" placeholder='Ethereum' onChange={\n                    (event, data) => {\n                        this.setState({ payValue: data.value });\n                    }} value={this.state.payValue} />\n\n                <Dropdown placeholder='Select Receiver Account' onChange={\n                    (event, data) => {\n                        this.setState({ receiver: data.value });\n                    }\n                } fluid selection options={this.getAccountsDropdownObject} value={this.state.receiver} />\n\n                <label >\n                    <button type=\"button\" onClick={this.addAction.bind(this)}>Add Action</button>\n                </label>\n            </form >\n        );\n    }\n}\n\nexport default ActionComponent;"]},"metadata":{},"sourceType":"module"}