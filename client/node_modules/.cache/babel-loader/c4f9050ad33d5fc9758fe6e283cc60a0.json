{"ast":null,"code":"import _defineProperty from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nicolas/Dokumente/Github/drizzle_react/client/src/CreateGlobalPayloadComponent.js\";\nimport React from \"react\";\nimport * as c from './Constants.js';\nimport \"./CreateGlobalPayloadComponent.css\";\nimport { Dropdown, Input } from 'semantic-ui-react';\n\nvar CreateGlobalPayloadComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateGlobalPayloadComponent, _React$Component);\n\n  function CreateGlobalPayloadComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CreateGlobalPayloadComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateGlobalPayloadComponent).call(this, props));\n    _this.state = {\n      payloadValue: \"\",\n      decisionType: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CreateGlobalPayloadComponent, [{\n    key: \"createPayload\",\n    value: function createPayload() {\n      var _this2 = this;\n\n      var drizzle = this.props.drizzle;\n      var contract = drizzle.contracts.ContractCollaborationManager;\n      var dType = c.DECISIONTYPES.find(function (type) {\n        if (type.text === _this2.state.decisionType) {\n          return type.value;\n        }\n      });\n    }\n  }, {\n    key: \"createStringPayload\",\n    value: function createStringPayload(contract, value) {\n      var stackId = contract.methods.createGlobalStringPayload.cacheSend(value, {\n        from: this.props.defaultAccount,\n        gas: 600000\n      });\n    }\n  }, {\n    key: \"createIntPayload\",\n    value: function createIntPayload(contract, value) {\n      var stackId = contract.methods.createGlobalIntPayload.cacheSend(value, {\n        from: this.props.defaultAccount,\n        gas: 600000\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _React$createElement;\n\n      return React.createElement(\"div\", {\n        className: \"payload-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"payload-type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Dropdown, (_React$createElement = {\n        placeholder: \"Select Type\",\n        fluid: true,\n        selection: true,\n        onChange: function onChange(event, data) {\n          _this3.setState({\n            decisionType: data.value\n          });\n        }\n      }, _defineProperty(_React$createElement, \"fluid\", true), _defineProperty(_React$createElement, \"selection\", true), _defineProperty(_React$createElement, \"options\", c.DECISIONTYPES), _defineProperty(_React$createElement, \"value\", this.state.decisionType), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))), React.createElement(\"div\", {\n        className: \"payload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Input, {\n        icon: \"money bill alternate outline\",\n        placeholder: \"Payload Value\",\n        onChange: function onChange(event, data) {\n          _this3.setState({\n            payloadValue: data.value\n          });\n        },\n        value: this.state.payloadValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"payload-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.createPayload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Create Payload\")));\n    }\n  }]);\n\n  return CreateGlobalPayloadComponent;\n}(React.Component);\n\nexport default CreateGlobalPayloadComponent;","map":{"version":3,"sources":["/home/nicolas/Dokumente/Github/drizzle_react/client/src/CreateGlobalPayloadComponent.js"],"names":["React","c","Dropdown","Input","CreateGlobalPayloadComponent","props","state","payloadValue","decisionType","drizzle","contract","contracts","ContractCollaborationManager","dType","DECISIONTYPES","find","type","text","value","stackId","methods","createGlobalStringPayload","cacheSend","from","defaultAccount","gas","createGlobalIntPayload","event","data","setState","createPayload","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as c from './Constants.js'\nimport \"./CreateGlobalPayloadComponent.css\"\nimport { Dropdown, Input } from 'semantic-ui-react'\n\nclass CreateGlobalPayloadComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            payloadValue: \"\",\n            decisionType: \"\",\n        }\n    }\n\n    createPayload() {\n        const { drizzle } = this.props;\n        const contract = drizzle.contracts.ContractCollaborationManager;\n        let dType = c.DECISIONTYPES.find((type) => {\n            if (type.text === this.state.decisionType) {\n                return type.value;\n            }\n        })\n\n    }\n\n    createStringPayload(contract, value) {\n        const stackId = contract.methods.createGlobalStringPayload.cacheSend(value, {\n            from: this.props.defaultAccount,\n            gas: 600000\n        });\n    }\n\n    createIntPayload(contract, value) {\n        const stackId = contract.methods.createGlobalIntPayload.cacheSend(value, {\n            from: this.props.defaultAccount,\n            gas: 600000\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"payload-container\">\n                <div className=\"payload-type\">\n                    <Dropdown placeholder='Select Type' fluid selection onChange={\n                        (event, data) => {\n                            this.setState({ decisionType: data.value });\n                        }} fluid selection options={c.DECISIONTYPES} value={this.state.decisionType} />\n                </div>\n                <div className=\"payload\">\n                    <Input icon='money bill alternate outline' placeholder='Payload Value' onChange={\n                        (event, data) => {\n                            this.setState({ payloadValue: data.value });\n                        }} value={this.state.payloadValue} />\n                </div>\n                <div className=\"payload-button\">\n                    <button type=\"button\" onClick={this.createPayload}>\n                        Create Payload\n                 </button>\n                </div>\n            </div >\n        );\n    }\n}\n\n\n\nexport default CreateGlobalPayloadComponent;"]},"metadata":{},"sourceType":"module"}