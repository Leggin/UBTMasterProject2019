{"ast":null,"code":"import _classCallCheck from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Tasks =\n/*#__PURE__*/\nfunction () {\n  function Tasks() {\n    _classCallCheck(this, Tasks);\n  }\n\n  _createClass(Tasks, null, [{\n    key: \"getTaskIds\",\n    value: function getTaskIds(drizzleState, getTasksDataKey) {\n      var ccmState = drizzleState.contracts.ContractCollaborationManager;\n      var tasksObject = ccmState.getTasks[getTasksDataKey];\n\n      if (tasksObject) {\n        return tasksObject.value;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getAllTasks\",\n    value: function getAllTasks(drizzleState, getTaskByIdDataKeys, getTasksDataKey) {\n      var tasks = [];\n      var ccmState = drizzleState.contracts.ContractCollaborationManager;\n      var taskIds = this.getTaskIds(drizzleState, getTasksDataKey);\n\n      if (taskIds) {\n        for (var index = 0; index < taskIds.length; index++) {\n          var tasksObject = ccmState.getTaskById[getTaskByIdDataKeys[index]];\n\n          if (tasksObject) {\n            tasks.push({\n              description: tasksObject.value.description,\n              tasktype: tasksObject.value.tasktype,\n              stateowner: tasksObject.value.stateowner,\n              requirements: tasksObject.value.requirements,\n              status: tasksObject.value.status,\n              id: index\n            });\n          }\n        }\n      }\n\n      return tasks;\n    }\n  }]);\n\n  return Tasks;\n}();\n\nexport default Task;","map":{"version":3,"sources":["/home/nicolas/Dokumente/Github/drizzle_react/client/src/Task.js"],"names":["Tasks","drizzleState","getTasksDataKey","ccmState","contracts","ContractCollaborationManager","tasksObject","getTasks","value","getTaskByIdDataKeys","tasks","taskIds","getTaskIds","index","length","getTaskById","push","description","tasktype","stateowner","requirements","status","id","Task"],"mappings":";;;IAAMA,K;;;;;;;;;+BAEgBC,Y,EAAcC,e,EAAiB;AAC7C,UAAMC,QAAQ,GAAGF,YAAY,CAACG,SAAb,CAAuBC,4BAAxC;AACA,UAAMC,WAAW,GAAGH,QAAQ,CAACI,QAAT,CAAkBL,eAAlB,CAApB;;AAEA,UAAII,WAAJ,EAAiB;AACb,eAAOA,WAAW,CAACE,KAAnB;AACH;;AACD,aAAO,EAAP;AACH;;;gCAEkBP,Y,EAAcQ,mB,EAAqBP,e,EAAiB;AACnE,UAAIQ,KAAK,GAAG,EAAZ;AACA,UAAMP,QAAQ,GAAGF,YAAY,CAACG,SAAb,CAAuBC,4BAAxC;AACA,UAAMM,OAAO,GAAG,KAAKC,UAAL,CAAgBX,YAAhB,EAA8BC,eAA9B,CAAhB;;AAEA,UAAIS,OAAJ,EAAa;AACT,aAAK,IAAIE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,OAAO,CAACG,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACjD,cAAMP,WAAW,GAAGH,QAAQ,CAACY,WAAT,CAAqBN,mBAAmB,CAACI,KAAD,CAAxC,CAApB;;AACA,cAAIP,WAAJ,EAAiB;AACbI,YAAAA,KAAK,CAACM,IAAN,CAAW;AACPC,cAAAA,WAAW,EAAEX,WAAW,CAACE,KAAZ,CAAkBS,WADxB;AAEPC,cAAAA,QAAQ,EAAEZ,WAAW,CAACE,KAAZ,CAAkBU,QAFrB;AAGPC,cAAAA,UAAU,EAAEb,WAAW,CAACE,KAAZ,CAAkBW,UAHvB;AAIPC,cAAAA,YAAY,EAAEd,WAAW,CAACE,KAAZ,CAAkBY,YAJzB;AAKPC,cAAAA,MAAM,EAAEf,WAAW,CAACE,KAAZ,CAAkBa,MALnB;AAMPC,cAAAA,EAAE,EAAET;AANG,aAAX;AAQH;AACJ;AACJ;;AACD,aAAOH,KAAP;AACH;;;;;;AAEL,eAAea,IAAf","sourcesContent":["class Tasks {\n\n    static getTaskIds(drizzleState, getTasksDataKey) {\n        const ccmState = drizzleState.contracts.ContractCollaborationManager;\n        const tasksObject = ccmState.getTasks[getTasksDataKey];\n\n        if (tasksObject) {\n            return tasksObject.value;\n        }\n        return [];\n    }\n\n    static getAllTasks(drizzleState, getTaskByIdDataKeys, getTasksDataKey) {\n        let tasks = [];\n        const ccmState = drizzleState.contracts.ContractCollaborationManager;\n        const taskIds = this.getTaskIds(drizzleState, getTasksDataKey);\n\n        if (taskIds) {\n            for (let index = 0; index < taskIds.length; index++) {\n                const tasksObject = ccmState.getTaskById[getTaskByIdDataKeys[index]];\n                if (tasksObject) {\n                    tasks.push({\n                        description: tasksObject.value.description,\n                        tasktype: tasksObject.value.tasktype,\n                        stateowner: tasksObject.value.stateowner,\n                        requirements: tasksObject.value.requirements,\n                        status: tasksObject.value.status,\n                        id: index,\n                    });\n                }\n            }\n        }\n        return tasks;\n    }\n}\nexport default Task"]},"metadata":{},"sourceType":"module"}