{"ast":null,"code":"import _classCallCheck from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolas/Dokumente/Github/drizzle_react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Task =\n/*#__PURE__*/\nfunction () {\n  function Task() {\n    _classCallCheck(this, Task);\n  }\n\n  _createClass(Task, null, [{\n    key: \"getTaskIds\",\n    value: function getTaskIds(drizzleState) {\n      var ccmState = drizzleState.contracts.ContractCollaborationManager;\n      var tasksObject = ccmState.getTasks[this.state.getTasksDataKey];\n\n      if (tasksObject) {\n        return tasksObject.value;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getAllTasks\",\n    value: function getAllTasks(drizzleState) {\n      var tasks = [];\n      var ccmState = drizzleState.contracts.ContractCollaborationManager;\n      var taskIds = this.getTaskIds(drizzleState);\n\n      if (taskIds) {\n        for (var index = 0; index < taskIds.length; index++) {\n          var tasksObject = ccmState.getTaskById[this.state.getTaskByIdDataKeys[index]];\n\n          if (tasksObject) {\n            tasks.push({\n              description: tasksObject.value.description,\n              tasktype: tasksObject.value.tasktype,\n              stateowner: tasksObject.value.stateowner,\n              requirements: tasksObject.value.requirements,\n              status: tasksObject.value.status,\n              id: index\n            });\n          }\n        }\n      }\n\n      return tasks;\n    }\n  }]);\n\n  return Task;\n}();\n\nexport default Task;","map":{"version":3,"sources":["/home/nicolas/Dokumente/Github/drizzle_react/client/src/Task.js"],"names":["Task","drizzleState","ccmState","contracts","ContractCollaborationManager","tasksObject","getTasks","state","getTasksDataKey","value","tasks","taskIds","getTaskIds","index","length","getTaskById","getTaskByIdDataKeys","push","description","tasktype","stateowner","requirements","status","id"],"mappings":";;;IAAMA,I;;;;;;;;;+BAEgBC,Y,EAAc;AAC5B,UAAMC,QAAQ,GAAGD,YAAY,CAACE,SAAb,CAAuBC,4BAAxC;AACA,UAAMC,WAAW,GAAGH,QAAQ,CAACI,QAAT,CAAkB,KAAKC,KAAL,CAAWC,eAA7B,CAApB;;AAEA,UAAIH,WAAJ,EAAiB;AACb,eAAOA,WAAW,CAACI,KAAnB;AACH;;AACD,aAAO,EAAP;AACH;;;gCAEkBR,Y,EAAc;AAC7B,UAAIS,KAAK,GAAG,EAAZ;AACA,UAAMR,QAAQ,GAAGD,YAAY,CAACE,SAAb,CAAuBC,4BAAxC;AACA,UAAMO,OAAO,GAAG,KAAKC,UAAL,CAAgBX,YAAhB,CAAhB;;AAEA,UAAIU,OAAJ,EAAa;AACT,aAAK,IAAIE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,OAAO,CAACG,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACjD,cAAMR,WAAW,GAAGH,QAAQ,CAACa,WAAT,CAAqB,KAAKR,KAAL,CAAWS,mBAAX,CAA+BH,KAA/B,CAArB,CAApB;;AACA,cAAIR,WAAJ,EAAiB;AACbK,YAAAA,KAAK,CAACO,IAAN,CAAW;AACPC,cAAAA,WAAW,EAAEb,WAAW,CAACI,KAAZ,CAAkBS,WADxB;AAEPC,cAAAA,QAAQ,EAAEd,WAAW,CAACI,KAAZ,CAAkBU,QAFrB;AAGPC,cAAAA,UAAU,EAAEf,WAAW,CAACI,KAAZ,CAAkBW,UAHvB;AAIPC,cAAAA,YAAY,EAAEhB,WAAW,CAACI,KAAZ,CAAkBY,YAJzB;AAKPC,cAAAA,MAAM,EAAEjB,WAAW,CAACI,KAAZ,CAAkBa,MALnB;AAMPC,cAAAA,EAAE,EAAEV;AANG,aAAX;AAQH;AACJ;AACJ;;AACD,aAAOH,KAAP;AACH;;;;;;AAEL,eAAeV,IAAf","sourcesContent":["class Task {\n\n    static getTaskIds(drizzleState) {\n        const ccmState = drizzleState.contracts.ContractCollaborationManager;\n        const tasksObject = ccmState.getTasks[this.state.getTasksDataKey];\n\n        if (tasksObject) {\n            return tasksObject.value;\n        }\n        return [];\n    }\n\n    static getAllTasks(drizzleState) {\n        let tasks = [];\n        const ccmState = drizzleState.contracts.ContractCollaborationManager;\n        const taskIds = this.getTaskIds(drizzleState);\n\n        if (taskIds) {\n            for (let index = 0; index < taskIds.length; index++) {\n                const tasksObject = ccmState.getTaskById[this.state.getTaskByIdDataKeys[index]];\n                if (tasksObject) {\n                    tasks.push({\n                        description: tasksObject.value.description,\n                        tasktype: tasksObject.value.tasktype,\n                        stateowner: tasksObject.value.stateowner,\n                        requirements: tasksObject.value.requirements,\n                        status: tasksObject.value.status,\n                        id: index,\n                    });\n                }\n            }\n        }\n        return tasks;\n    }\n}\nexport default Task"]},"metadata":{},"sourceType":"module"}